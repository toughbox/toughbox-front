name: Deploy Frontend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  NODE_VERSION: 20.x

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Upload to server (SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "dist/*"
          target: "${{ secrets.DEPLOY_PATH }}/_incoming"
          strip_components: 1

      - name: Activate new release
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            sudo mkdir -p '${{ secrets.DEPLOY_PATH }}/current'
            sudo mkdir -p '${{ secrets.DEPLOY_PATH }}/_incoming'
            sudo rm -rf '${{ secrets.DEPLOY_PATH }}/current/*'
            sudo mv '${{ secrets.DEPLOY_PATH }}/_incoming/'* '${{ secrets.DEPLOY_PATH }}/current/'
            sudo rm -rf '${{ secrets.DEPLOY_PATH }}/_incoming' 